<UserControl x:Class="RSA_Demo.AttackView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RSA_Demo"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:RSA="clr-namespace:RSA;assembly=RSA"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <local:BigIntegerConverter x:Key="BigIntegerConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:EnumWithDescriptionToStringConverter x:Key="EnumWithDescriptionToStringConverter"/>
        <ObjectDataProvider x:Key="DataFromAttackTypeTypeEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:AttackType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <DockPanel Margin="5">
        <Button DockPanel.Dock="Bottom" Width ="200" Content="Perform attack" Command="{Binding PerformAttackCommand}">
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=ModulusTextBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PublicExponentTextBox, Path=(Validation.HasError)}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <CheckBox x:Name="ShowPQCheckBox" DockPanel.Dock="Bottom" Content="Show P and Q" IsChecked="False"/>

        <StackPanel DockPanel.Dock="Bottom" Margin="0 5 0 5" Orientation="Horizontal">
            <Label Content="Attack type"/>

            <ComboBox Margin="0 5 5 5" Width="200" ItemsSource="{Binding Source={StaticResource DataFromAttackTypeTypeEnum}}"
                SelectedItem="{Binding Path=AttackType}" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <ContentPresenter
                            Content="{Binding Converter={StaticResource EnumWithDescriptionToStringConverter}, ConverterParameter={x:Type local:AttackType}}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>

        <Grid DockPanel.Dock="Bottom" 
                        Visibility="{Binding ElementName=ShowPQCheckBox, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0" Content="P"/>
            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding P, Converter={StaticResource BigIntegerConverter}}" IsReadOnly="True"/>

            <Label Grid.Row="1" Grid.Column="0" Content="Q"/>
            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Q, Converter={StaticResource BigIntegerConverter}}" IsReadOnly="True"/>
        </Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="100"/>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" MinHeight="100"/>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" MinHeight="100"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="150"/>
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Row="0" Margin="0 5 0 5">
                <Label DockPanel.Dock="Top" Content="Modulus"/>
                <TextBox x:Name="ModulusTextBox" Style="{StaticResource TextBoxWithValidationStyle}">
                    <TextBox.Text>
                        <Binding Path="Modulus">
                            <Binding.ValidationRules>
                                <local:BigIntegerValidationRule/>
                                <ExceptionValidationRule/>
                            </Binding.ValidationRules>
                            <Binding.Converter>
                                <local:BigIntegerConverter/>
                            </Binding.Converter>
                            <Binding.UpdateSourceTrigger>
                                PropertyChanged
                            </Binding.UpdateSourceTrigger>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </DockPanel>

            <GridSplitter Grid.Row="1" Height="3" HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndNext">
            </GridSplitter>
            <DockPanel Grid.Row="2" Margin="0 5 0 5">
                <Label DockPanel.Dock="Top" Content="Public exponent"/>
                <TextBox x:Name="PublicExponentTextBox" Style="{StaticResource TextBoxWithValidationStyle}">
                    <TextBox.Text>
                        <Binding Path="PublicExponent">
                            <Binding.ValidationRules>
                                <local:BigIntegerValidationRule/>
                                <ExceptionValidationRule/>
                            </Binding.ValidationRules>
                            <Binding.Converter>
                                <local:BigIntegerConverter/>
                            </Binding.Converter>
                            <Binding.UpdateSourceTrigger>
                                PropertyChanged
                            </Binding.UpdateSourceTrigger>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </DockPanel>

            <GridSplitter Grid.Row="3" Height="3" HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndNext">
            </GridSplitter>

            <DockPanel Grid.Row="4" Margin="0 5 0 5">
                <Label DockPanel.Dock="Top" Content="Private exponent"/>
                <TextBox IsReadOnly="True" Text="{Binding PrivateExponent, Converter={StaticResource BigIntegerConverter}}"/>
            </DockPanel>
        </Grid>
    </DockPanel>
</UserControl>
